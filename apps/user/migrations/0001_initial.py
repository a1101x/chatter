# Generated by Django 2.0.3 on 2018-03-22 13:26

import apps.user.models
import apps.user.utils
import apps.user.validators
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(blank=True, db_index=True, help_text='First name.', max_length=120, null=True, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, db_index=True, help_text='Last name.', max_length=120, null=True, verbose_name='Last name')),
                ('birthday', models.DateField(blank=True, db_index=True, help_text='Date of birth.', null=True, verbose_name='Birthday')),
                ('username', models.CharField(db_index=True, error_messages={'unique': 'A user with that username already exists.'}, help_text='32 characters or fewer. Letters, digits and @/./+/-/_.', max_length=32, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='Username')),
                ('gender', models.PositiveSmallIntegerField(blank=True, choices=[(100, 'Male'), (200, 'Female')], db_index=True, help_text='Gender (100 - Male, 200 - Female).', null=True, verbose_name='Gender')),
                ('email', models.EmailField(db_index=True, help_text='User email.', max_length=254, unique=True, verbose_name='E-mail address')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='users', validators=[apps.user.validators.validate_profile_pic], verbose_name='Photo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', apps.user.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ChangeEmailCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, default=apps.user.utils.generate_pin_code, max_length=4, verbose_name='Code')),
                ('new_email', models.EmailField(blank=True, db_index=True, max_length=254, null=True, verbose_name='New email')),
                ('time_expired', models.DateTimeField(db_index=True, default=apps.user.utils.default_time_expired, verbose_name='Time expired')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Creation time')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_code', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Change email code',
                'verbose_name_plural': 'Change email codes',
            },
        ),
        migrations.CreateModel(
            name='UserActivationCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, default=apps.user.utils.generate_pin_code, max_length=4, verbose_name='Code')),
                ('time_expired', models.DateTimeField(db_index=True, default=apps.user.utils.default_time_expired, verbose_name='Time expired')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Creation time')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='code', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User activation code',
                'verbose_name_plural': 'User activation codes',
            },
        ),
    ]
